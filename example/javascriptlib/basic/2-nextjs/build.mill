package build
import mill._, javascriptlib._

object web extends TypeScriptModule {
  // These are all added as devDependencies but I don't think they should be.
  def npmDeps: T[Seq[String]] = Task {Seq(
    "react@^18",
    "react-dom@^18",
    "next@^15.0.3"
  )}
  // TODO: How do I handle devDependencies?
  def npmDevDeps: T[Seq[String]] = Task {Seq(
    "typescript@^5",
    "@types/node@^20",
    "@types/react@^18",
    "@types/react-dom@^18"
  )}

  def transitiveNpmDeps: T[Seq[String]] = Task {
    Task.traverse(moduleDeps)(_.npmDeps)().flatten
  }

  def mainFileName = Task { s"/app/page.js" }

  // TOOD: propogate this back to TypeScriptModule
  def allSources = Task { os.walk(sources().path).filter(file => file.ext == "ts" || file.ext == "tsx").map(PathRef(_)) }

  def allFiles = Task.Source(millSourcePath)

  def run(args: mill.define.Args) = Task.Command {
    os.copy(npmInstall().path / "node_modules", Task.dest / "node_modules", followLinks = false)
    os.copy(build0().path, Task.dest / ".next", followLinks = false)

    os.call((Task.dest / "node_modules/.bin/next", "start"), stdout = os.Inherit)
  }

  // This is used for making live updates, so needs to look at source folder
  def dev(args: mill.define.Args) = Task.Command {
    os.remove.all(millSourcePath / "node_modules")
    os.remove.all(millSourcePath / "tsconfig.json")
    os.copy(npmInstall().path / "node_modules", millSourcePath / "node_modules", followLinks = false)

    os.call((millSourcePath / "node_modules/.bin/next", "dev", millSourcePath), stdin = os.Inherit, stdout = os.Inherit)
  }

  def build(args: mill.define.Args) = Task.Command {
    build0()
  }

  def build0 = Task {
    os.copy(allFiles().path, Task.dest, mergeFolders = true)
    os.copy(npmInstall().path / "node_modules", Task.dest / "node_modules", followLinks = false)

    os.call((Task.dest / "node_modules/.bin/next", "build"), stdout = os.Inherit)

    PathRef(Task.dest / ".next")
  }
}

// Documentation for mill.javascriptlib

/** Usage

> mill web.run
Hello James Bond Professor

> mill show qux.bundle
".../out/qux/bundle.dest/bundle.js"

> node out/qux/bundle.dest/bundle.js James Bond prof
Hello James Bond Professor

*/
